<!DOCTYPE html>
<html>
<head>
	<title><%= title %></title>

    <!-- =================================== IMPORTACIONES =============================== -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- ================================= ESTILOS BOOSTRAP =========================== -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

    <!-- ================================= CODEMIRROR =========================== -->
    <link rel="stylesheet" href="/codemirror/lib/codemirror.css">
    <script src="/codemirror/lib/codemirror.js"></script>

     <script src="/codemirror/lib/codemirror.js"></script>
     <script src="/codemirror/mode/clike/clike.js"></script>
     <link rel="stylesheet" href="/codemirror/lib/codemirror.css"/>
     <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
     <script src="/codemirror/mode/javascript/javascript.js"></script>              <!-- MODO   -->
     <link href="/codemirror/theme/midnight.css" rel="stylesheet" />       <!-- TEMA   -->
     <!-- CODEMIRROR ADDONS -->
     <script src="/codemirror/addon/edit/closebrackets.js"></script>      
     <script src="/codemirror/addon/selection/active-line.js"></script>



</head>
<body>
    
    <div class="container-fluid">
        <h1><%= title %></h1>
        <div class="botones">
            <button class="btns btn-outline-success" onclick="crearArchivo()">Crear archivo</button>
            <button class="btns btn-outline-success" onclick="cargarArchivo()">Abrir archivo</button>
            <button class="btns btn-outline-success" onclick="guardarArchivo()">Guardar archivo</button>
            <button class="btns-eliminar btn-outline-success" onclick="cerrarPestanaActual()">Eliminar pestaña</button>
            <button class="btns btn-outline-success" onclick="abrirNuevaPestana()">Agregar pestaña</button>
        </div>
        <div class="row mt-3">
            <div class="col-md-6">
                <h4>Entrada</h4>
                <form method="POST" action="/ejecutar">
                    <textarea id="editor" name="codigo"><%= codigo %></textarea>
                    <button type="submit" class="btn btn-outline-success mt-3">Ejecutar</button>
                </form>
            </div>
            <div class="col-md-6">
                <h4>Consola</h4>
                <textarea id="consola" name="textarea"><%= salida %></textarea>
            </div>
        </div>
    </div>
    <script>
        let editor = CodeMirror.fromTextArea(document.getElementById("editor"),{
            lineNumbers         : true,
            mode                : "text/x-java",
            theme               : "midnight",
            autoCloseBrackets   : true,
            //lineWrapping : true,
            styleActiveLine     : true
        });
        

        // Dividir la pantalla en 2 columnas
        const totalHeight = window.innerHeight;
        const editorHeight = totalHeight - 200;

        editor.setSize("100%", editorHeight + "px");

        let consolaEditor = CodeMirror.fromTextArea(document.getElementById("consola"),{
            readOnly            : true,
            lineNumbers         : false,
            mode                : "text/x-java",
            theme               : "midnight",
            autoCloseBrackets   : true,
            cursorBlinkRate     : -1, // evitar parpadeo del cursor
        });
        consolaEditor.setSize("100%", editorHeight + "px");

        function crearArchivo() {
            // Verificar si el editor tiene contenido
            let contenido = editor.getValue();
            if (contenido !== '') {
                // Mostrar cuadro de diálogo para confirmar la acción
                Swal.fire({
                title: '¿Está seguro?',
                text: "Se perderá el contenido del editor",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, crear nuevo archivo'
                }).then((result) => {
                if (result.isConfirmed) {
                    // Limpiar el editor
                    editor.setValue('');
                }
                })
            } else {
                // Si el editor está vacío, simplemente limpiar el editor
                editor.setValue('');
            }

            // Limpiar la consola
            consolaEditor.setValue('');
            }


        function guardarArchivo() {
            // Obtener el contenido del editor
            let contenido = editor.getValue();

            // Verificar si el editor está vacío
            if (contenido.trim() === '') {
                Swal.fire({
                    title: 'El editor está vacío',
                    icon: 'warning',
                    confirmButtonText: 'Ok'
                });
                return;
            }

            // Mostrar cuadro de diálogo con un input para ingresar el nombre del archivo
            Swal.fire({
                title: 'Guardar archivo',
                input: 'text',
                inputValue: '', // Valor predeterminado del input
                inputPlaceholder: 'Ingrese el nombre del archivo',
                showCancelButton: true,
                confirmButtonText: 'Guardar',
                cancelButtonText: 'Cancelar',
                inputValidator: (value) => {
                // Validar que se haya ingresado un nombre de archivo
                if (!value) {
                    return 'Por favor ingrese un nombre de archivo';
                }
                }
            }).then((result) => {
                // Si el usuario hace clic en el botón "Guardar"
                if (result.isConfirmed) {
                // Obtener el nombre del archivo y agregar la extensión ".tw"
                let nombreArchivo = result.value + '.tw';

                // Obtener el contenido del textarea
                let contenido = editor.getValue();

                // Crear un nuevo objeto Blob con el contenido
                let blob = new Blob([contenido], {type: "text/plain;charset=utf-8"});

                // Crear un elemento de descarga y establecer sus atributos
                let enlaceDescarga = document.createElement("a");
                enlaceDescarga.href = window.URL.createObjectURL(blob);
                enlaceDescarga.download = nombreArchivo;

                // Hacer clic en el enlace de descarga para descargar el archivo
                document.body.appendChild(enlaceDescarga);
                enlaceDescarga.click();
                document.body.removeChild(enlaceDescarga);
                }
            });
            }
        
            function cargarArchivo() {
                // Crear un input tipo file
                const input = document.createElement("input");
                input.type = "file";
                input.accept = ".tw";

                // Escuchar el evento change del input
                input.addEventListener("change", function() {
                    // Obtener el archivo seleccionado
                    const file = input.files[0];

                    // Crear un objeto FileReader
                    const reader = new FileReader();

                    // Escuchar el evento load del FileReader
                    reader.addEventListener("load", function() {
                    // Agregar el contenido del archivo al textarea "editor"
                    editor.setValue(reader.result);
                    });

                    // Leer el archivo como texto
                    reader.readAsText(file);
                });

                // Hacer clic en el input para abrir el explorador de archivos
                input.click();
                }
    function cerrarPestanaActual() {
    window.close();
    }

    
    function abrirNuevaPestana() {
        window.open('http://localhost:3000');
        }





    </script>
    <style>
        body {
            background-color: #282c34;
            color: #f8f8f2;
            font-family: "Courier New", Courier, monospace;
        }
    
        #editor {
            background-color: #1E1E1E;
            color: #D4D4D4;
            border: 1px solid #ccc;
        }
    
        #consola {
            background-color: #1E1E1E;
            color: #D4D4D4;
            border: 1px solid #ccc;
        }
    
        .btn-outline-success {
            color: #28a745;
            background-color: #1E1E1E;
            border-color: #28a745;
        }
    
        .btn-outline-success:hover {
            color: #fff;
            background-color: #28a745;
            border-color: #28a745;
        }
        .btns{
            color: #a79a28;
            background-color: #1E1E1E;
            border-color: #a79a28;
        }
    
        .btns:hover {
            color: #fff;
            background-color: #a79a28;
            border-color: #a79a28;
        }
        .btns-eliminar{
            color: #a72828;
            background-color: #1E1E1E;
            border-color: #a72828;
        }
    
        .btns-eliminar:hover {
            color: #fff;
            background-color: #a72828;
            border-color: #a72828;
        }
    </style>
</body>

</html>